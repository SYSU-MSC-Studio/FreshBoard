@model mscfreshman.Views.User.IndexModel
@inject Microsoft.AspNetCore.Identity.SignInManager<mscfreshman.Data.Identity.FreshBoardUser> SignInManager
@inject Microsoft.AspNetCore.Identity.UserManager<mscfreshman.Data.Identity.FreshBoardUser> UserManager

@{
    ViewBag.Title = "个人中心";
}

<h1 class="hi heading">@User.Identity.Name</h1>
<h2 class="ui heading">账号信息</h2>
<form class="ui form">
  <div class="field">
      <label>邮箱</label>
      <input 
          type="text"
          disabled 
          name="email" 
          id="email" 
          placeholder="user@example.com" 
          value="@((await UserManager.GetUserAsync(User))?.Email)">
  </div>
  <div class="field">
      <label>手机号</label>
      <input
          type="text"
          disabled
          name="phone"
          id="phone"
          placeholder="123-1234-5678"
          value="@((await UserManager.GetUserAsync(User))?.PhoneNumber)">
  </div>
</form>
<h2 class="ui heading">个人信息</h2>
<div class="ui hidden info icon message">
    <i class="exclamation triangle icon"></i>
    <div class="content">
      <div class="header" id="message-info">请填写全部个人信息，否则面试申请无效。</div>
    </div>
  </div>
<form class="ui form" id="data">
@foreach (var data in Model.PersonalData)
{
  <div class="field">
    <label>@data.Title</label>
    <input type="text" name="data[@data.DataTypeId]" placeholder="@data.Title" value="@data.Value">
    @if(!String.IsNullOrEmpty(data.Description))
    {
        <div class="ui pointing label">
        @data.Description
        </div>
    }
  </div>
}
  <div class="ui hidden success icon message">
      <i class="exclamation triangle icon"></i>
      <div class="content">
      <div class="header" id="message-success"></div>
      <p id="message-content"></p>
      </div>
  </div>
  <div class="ui hidden error icon message">
    <i class="exclamation triangle icon"></i>
    <div class="content">
    <div class="header" id="message-error"></div>
    <p id="message-content"></p>
    </div>
  </div>
  <div class="ui button" id="data-submit">保存</div>
</form>

@section Scripts
{
    <script lang="js">
    function checkDataFilled() {
      if($("#data input").filter(function() {
          return !this.value;
      }).length > 0) {
        $(".info.message")
          .removeClass("hidden");
      } else {
        $(".info.message")
          .addClass("hidden");
      }
    }
    $(document).ready(function () {
      checkDataFilled();
      $('#data-submit').click(function () {
        checkDataFilled();
        $('#data').addClass('loading disabled');
        $('#data').removeClass('success error');
        axios.post('/User/Update', new FormData($('#data')[0]))
          .then(function (res){
            if(res.data.succeeded) {
              $('#data').addClass('success');
              $('#message-success')
                .html('修改成功');
            } else {
              $('#data').addClass('error');
              $('#message-error')
                .html(res.data.message);
            }
            $('#data').removeClass('loading disabled');
          })
          .catch(function (err){
            $('#data').addClass('error');
              $('#message-error')
                .html(err && err.message);
            $('#data').removeClass('loading disabled');
          });
      });
    });
    </script>
}